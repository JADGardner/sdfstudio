{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Launch Chrome against localhost",
      "request": "launch",
      "type": "chrome",
      "url": "http://localhost:4000",
      "webRoot": "${workspaceFolder}/nerfstudio/viewer/app"
    },
    {
      "name": "Python: Attach using Process ID",
      "type": "python",
      "request": "attach",
      "processId": "${command:pickProcess}",
      "justMyCode": true
    },
    {
      "name": "Python: Current File",
      "type": "python",
      "request": "launch",
      "program": "${file}",
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Python: train",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": [
        "instant_ngp",
        "--viewer.no-enable",
        "--logging.event-writer=wandb"
      ]
    },
    {
      "name": "Python: train mv-volsdf",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": [
        "mv-monosdf",
        // "--viewer.no-enable",
        // "--logging.event-writer=wandb",
        "--vis", "wandb",
        "--pipeline.datamanager.train-num-images-to-sample-from", "1",
        "--pipeline.datamanager.camera-optimizer.mode", "off",
        "--pipeline.model.near-plane", "1.0",
        "--pipeline.model.far-plane", "6",
        "--pipeline.model.background-color", "black",
        "--pipeline.model.sdf-field.inside-outside", "False",
        "--pipeline.model.mono-depth-loss-mult", "0.0",
        "--pipeline.model.mono-normal-loss-mult", "0.0",
        "uniscene-data",
        "--data", "data/DTU/scan24",
        // "--data", "data/DTU/scan114"
        "--center_crop_type", "center_crop_for_dtu",
        "--neighbors_num", "10"
      ]
    },
    {
      "name": "Python: train ngp",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["instant-ngp",
               "sdfstudio-data",
               "--data", "data/sdfstudio-demo-data/dtu-scan65/",]
    },
    {
      "name": "Python: train RENI-NeuS nerf-osr",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["RENI-NeuS",
               "--vis", "tensorboard",
               "nerfosr-data",
               "--scene", "lk2",
               "--use-session-data", "False"]
    },
    {
      "name": "Python: train RENI-NeuS nerf-osr with mask",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["RENI-NeuS",
               "nerfosr-data",
               "--semantic-dir", "cityscapes_mask",
               "--masks-from-semantics", "True"]
    },
    {
      "name": "Python: train RENI-NeuS nerf-osr with vis mlp",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["RENI-NeuS",
              "--pipeline.model.sdf_field.use_visibility", "mlp",
               "--vis", "tensorboard",
               "nerfosr-data",
               "--scene", "lk2",
               "--use-session-data", "False"]
    },
    {
      "name": "Python: train RENI-Nerfacto nerf-osr with semantics",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["RENI-Nerfacto",
               "nerfosr-data"]
    },
    {
      "name": "Python: train neus-facto phototourism",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["neus-facto",
               "phototourism-data"]
    },
    {
      "name": "Python: train nerfacto heritage-data",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["nerfacto",
               "heritage-data",
               "--data", "data/phototourism/brandenburg-gate"]
    },
    {
      "name": "Python: train ngp nerfstudio",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": [
        "instant_ngp",
        // "--experiment_name=nerfstudio_experiment",
        "--logging.local-writer.max-log-size=0",
        "--viewer.no-enable"
        // viewer
        // "--viewer.enable",
        // "--viewer.zmq-url=tcp://127.0.0.1:6001",
        // "--viewer.websocket-port=8014",
        // "--pipeline.model.randomize-background",
        // "--pipeline.model.cone-angle=0.00390625",
        // "nerfstudio-data"
      ]
    },
    {
      "name": "Python: train ngp-friends",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": [
        "instant_ngp",
        "--viewer.enable",
        "--viewer.zmq-url=tcp://127.0.0.1:6001",
        "--viewer.websocket-port=8014",
        "--trainer.steps_per_save=1000000",
        "--trainer.steps_per_test=1000000",
        "--pipeline.model.density-field-params.base-scale=4",
        "--pipeline.model.density-field-params.num-cascades=1",
        "pipeline.datamanager.train-dataparser:friends-data-parser-config",
        "--pipeline.datamanager.train-dataparser.scene-scale=4"
      ]
    },
    {
      "name": "Python: train semantic_nerfw",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["semantic_nerf"]
    },
    {
      "name": "Python: train neus-facto nerfosr",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["neus-facto",
               "--pipeline.model.sdf-field.inside-outside", "False",
               "--pipeline.model.sdf-field.use-appearance-embedding", "True",
               "--pipeline.model.fg_mask_loss_mult", "1.0",
               "--pipeline.model.background-model", "mlp",
               "nerfosr-data",
               "--scene", "lk2",
               "--use-session-data", "False"]
    },
    {
      "name": "Python: train neus-facto nuscenes with mask",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["neus-facto",
               "nuscenes-data",
               "--data_dir", "data/NuScenes/v1.0-mini",
               "--mask_dir", "data/NuScenes/v1.0-mini"]
    },
    {
      "name": "Python: train phototourism",
      "type": "python",
      "request": "launch",
      "program": "scripts/train.py",
      "console": "integratedTerminal",
      "args": ["phototourism",
               "phototourism-data"]
    }
  ]
}